version: v2beta1
name: troubleshooting-panel-console-plugin

functions:
  scale_down_coo: |-
    kubectl scale --replicas=0 -n ${DEVSPACE_NAMESPACE} deployment/observability-operator
  scale_up_coo: |-
    kubectl scale --replicas=1 -n ${DEVSPACE_NAMESPACE} deployment/observability-operator
# This is a list of `pipelines` that DevSpace can execute (you can define your own)
pipelines:
  # This is the pipeline for the main command: `devspace dev` (or `devspace run-pipeline dev`)
  dev:
    run: |-
      scale_down_coo               # 3. Scale down COO so it doesn't fight over the troubleshooting-panel
      start_dev app                # 5. Start dev mode "app" (see "dev" section)
  purge:
    run: |-
      stop_dev --all
      scale_up_coo

# This is a list of `dev` containers that are based on the containers created by your deployments
dev:
  app:
    # Search for the container that runs this image
    labelSelector:
      # Use the instance selector that COO adds
      app.kubernetes.io/instance: troubleshooting-panel
    # Replace the container image with this dev-optimized image (allows to skip image building during development)
    devImage: quay.io/openshift-observability-ui/troubleshooting-panel-console-plugin:devspace
    # Sync files between the local filesystem and the development container
    sync:
      - path: ./web/dist:/opt/app-root/web/dist
        startContainer: true
        printLogs: true
    command: ["make"]
    args: ["start-devspace-backend"]
    # Inject a lightweight SSH server into the container (so your IDE can connect to the remote dev env)
    ssh:
      enabled: true
